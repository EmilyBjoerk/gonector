{
  "name": "Gonector",
  "tagline": "A framework implementing the Go Text Protocol (GTP) version 2 for Java. ",
  "body": "[![Status](https://img.shields.io/travis/EmilyBjoerk/gonector.svg)](https://travis-ci.org/EmilyBjoerk/gonector)\r\n[![Code Coverage](https://img.shields.io/codecov/c/github/EmilyBjoerk/gonector/master.svg)](https://codecov.io/github/EmilyBjoerk/gonector?branch=master)\r\n[![Bintray](https://img.shields.io/bintray/v/emilybjoerk/lisoft/gonector.svg)](https://bintray.com/emilybjoerk/lisoft/gonector)\r\n\r\n# GoNector\r\nGoNector is an easy to use framework implementing the Go Text Protocol (GTP) version 2 for Java. \r\n\r\n# Downloading\r\nThe project has been submitted to jcentral for approval and once that passes it will be available as below. \r\n\r\n\r\nGradle (not yet available, avaiting approval):\r\n```gradle\r\ncompile 'org.li-soft.gonector:gonector:1.0.0'\r\n```\r\n\r\nMaven (not yet available, avaiting approval):\r\n```xml\r\n<dependency>\r\n  <groupId>org.li-soft.gonector</groupId>\r\n  <artifactId>gonector</artifactId>\r\n  <version>1.0.0</version>\r\n  <type>pom</type>\r\n</dependency>\r\n```\r\n\r\n\r\n# JavaDoc\r\nThe JavaDoc can be found here: https://emilybjoerk.github.io/gonector/javadoc/ \r\n\r\n# Usage\r\nThe easiest way to use GoNector is to connect it to standard input and standard output like so:\r\n\r\n```java\r\n    public static void main(String[] args) {\r\n        // Create an instance of your go engine\r\n        GoEngine engine = new MyGoEngine();\r\n        \r\n        // Create reader and writer for standard input and output\r\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\r\n        Writer writer = new BufferedWriter(new OutputStreamWriter(System.out));\r\n\r\n        // Run the protocol parsing loop\r\n        GoTextProtocol gtp = new GoTextProtocol(reader, writer, engine);\r\n        gtp.call();\r\n    }\r\n```\r\n\r\nAll that is left for you to do is to implement the `GoEngine` interface to implement your bot. Documentation can be found in the JavaDoc, also for reference you might want to read the Go Text Protocol (GTP) specification here: https://www.lysator.liu.se/~gunnar/gtp/.\r\n\r\nOnce you have implemented your `GoEngine` and added the above to your main method you should be able to play against the bot using any software that supports the GTP version 2. Like for example: https://sourceforge.net/projects/gogui/. Simply build your project to a fat jar and tell GoGui or whatever program you choose to use to execute `java -jar /path/to/thejarfile.jar`.\r\n\r\nHere is an example bot that plays random moves:\r\n\r\n```java\r\nclass RandomGoEngine implements GoEngine {\r\n    private int size;\r\n    private final Random rng = new Random();\r\n    private Player[] board;\r\n\r\n    @Override public String getName() {\r\n        return \"Random Engine\";\r\n    }\r\n\r\n    @Override public String getVersion() {\r\n        return \"0.0.1\";\r\n    }\r\n\r\n    @Override public boolean resizeBoard(int aSize) {\r\n        size = aSize;\r\n        return true;\r\n    }\r\n\r\n    @Override public void newGame() {\r\n        board = new Player[size*size];\r\n    }\r\n\r\n    @Override public void setKomi(float komi) {\r\n        // This bot doesn't care about komi. \r\n    }\r\n\r\n    @Override public boolean addMove(Move aMove, Player aPlayer) {\r\n        if(aMove == Move.PASS || aMove == Move.RESIGN)\r\n            return true;\r\n\r\n        int i = aMove.x + aMove.y*size;\r\n\r\n        if(null != board[i])\r\n            return false;\r\n        board[i] = aPlayer;\r\n\r\n        // we'll ignore ko, hopefully we won't randomly play a ko-fight...\r\n        return true;\r\n    }\r\n\r\n    @Override public Move nextMove(Player player) {\r\n        Move c;\r\n        boolean success;\r\n        int triesLeft = 3;\r\n\r\n        do{\r\n            c = new Move(rng.nextInt(size), rng.nextInt(size));\r\n            success = addMove(c, player);\r\n            triesLeft--;\r\n        }while (!success && triesLeft >= 0);\r\n\r\n        if(!success)\r\n            return Move.RESIGN;\r\n        return c;\r\n    }\r\n}\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}